df_red %>% ggplot(aes(x = fixed.acidity, y = residual.sugar, color=as.factor(quality))) +
geom_point(alpha = 0.1)
df_red %>% ggplot(aes(x = fixed.acidity, y = residual.sugar, color=as.factor(quality))) +
geom_point()
df_white %>% ggplot(aes(x = fixed.acidity, y = residual.sugar, color=as.factor(quality))) +
geom_point()
df_white %>% filter(quality >= 7) %>% ggplot(aes(x = fixed.acidity, y = residual.sugar, color=as.factor(quality))) +
geom_point()
df_white %>% ggplot(aes(x = fixed.acidity, y = residual.sugar, color=as.factor(quality))) +
geom_point()
df_white %>% filter(quality >= 7) %>% ggplot(aes(x = fixed.acidity, y = residual.sugar, color=as.factor(quality))) +
geom_point()
df_white %>% filter(quality <= 5) %>% ggplot(aes(x = fixed.acidity, y = residual.sugar, color=as.factor(quality))) +
geom_point()
df_white %>% ggplot(aes(x = fixed.acidity, y = residual.sugar, color=as.factor(quality))) +
geom_point()
df_white %>% filter(quality <= 5) %>% ggplot(aes(x = fixed.acidity, y = residual.sugar, color=as.factor(quality))) +
geom_point()
df_white %>% filter(quality >= 7) %>% ggplot(aes(x = fixed.acidity, y = residual.sugar, color=as.factor(quality))) +
geom_point()
df_red %>% ggplot(aes(x = citric.acid, y = sulphates, color=as.factor(quality))) +
geom_point()
df_red %>% filter(quality<=5) %>% ggplot(aes(x = citric.acid, y = sulphates, color=as.factor(quality))) +
geom_point()
df_red %>% filter(quality>=7) %>% ggplot(aes(x = citric.acid, y = sulphates, color=as.factor(quality))) +
geom_point()
df_red %>% ggplot(aes(x = citric.acid, y = sulphates, color=as.factor(quality))) +
geom_point()
df_red %>% filter(quality<=5) %>% ggplot(aes(x = citric.acid, y = sulphates, color=as.factor(quality))) +
geom_point()
df_red %>% filter(quality>=7) %>% ggplot(aes(x = citric.acid, y = sulphates, color=as.factor(quality))) +
geom_point()
df_white %>% ggplot(aes(x = citric.acid, y = residual.sugar, color=as.factor(quality))) +
geom_point()
df_white %>% ggplot(aes(x = citric.acid, y = residual.sugar, color=as.factor(quality))) +
geom_point()
df_white %>% filter(quality <= 5) %>% ggplot(aes(x = citric.acid, y = residual.sugar, color=as.factor(quality))) +
geom_point()
df_white %>% filter(quality >= 7) %>% ggplot(aes(x = citric.acid, y = residual.sugar, color=as.factor(quality))) +
geom_point()
df_white %>% filter(quality!=6)
df_white %>% filter(quality!=7)
df_white %>% filter(quality!=6)
df_white %>% filter(quality!=6) %>% mutate(new_quality = ifelse(quality > 6, 'high', 'low'))
%>% mutate(new_quality = ifelse(quality > 6, 'high', 'low'))
df_white %>% filter(quality!=6)
df_white %>%
filter(quality!=6) %>%
mutate(new_quality = ifelse(quality > 6, 'high', 'low'))
df_white %>%
filter(quality!=6) %>%
mutate(new_quality = ifelse(quality > 6, 'high', 'low')) %>%
ggplot(aes(x = citric.acid, y = residual.sugar, color=new_quality)) +
geom_point()
df_red %>%
filter(quality!=6) %>%
mutate(new_quality = ifelse(quality > 6, 'high', 'low')) %>%
ggplot(aes(x = citric.acid, y = sulphates, color=new_quality)) +
geom_point()
df_white %>%
filter(quality!=6) %>%
mutate(new_quality = ifelse(quality > 6, 'high', 'low')) %>%
ggplot(aes(x = citric.acid, y = residual.sugar, color=new_quality)) +
geom_point()
df_red %>%
filter(quality!=6) %>%
mutate(new_quality = ifelse(quality > 6, 'high', 'low')) %>%
ggplot(aes(x = citric.acid, y = sulphates, color=new_quality)) +
geom_point()
df_red['quality']
X = df_red['alcohol']
X
y = df_red['quality']
x = df_red['alcohol']
D = data.frame(Y = y, X = x)
D
lm_alcohol = lm(Y~., data=D)
D
D = data.frame(y, x)
D
lm_alcohol = lm(quality~., data=D)
summary(lm_alcohol)
y = df_white['quality']
x = df_white['citric.acid']
D = data.frame(y, x)
D
lm_alcohol = lm(quality~., data=D)
summary(lm_alcohol)
D = data.frame(y, x)
y = df_red['quality']
x = df_red['citric.acid']
D = data.frame(y, x)
lm_alcohol = lm(quality~., data=D)
summary(lm_alcohol)
#You do not need to touch this chunk
#words after "#" sign are treated as comments
#It is strongly recommanded to use English in r markdown
knitr::opts_chunk$set(echo = TRUE)
#install.packages("ggplot2")    # ggplot2 패키지 설치(한번만 설치하면 됨)
#install.packages("dplyr")      # dplyr 패키지 설치(한번만 설치하면 됨)
#install.packages("GGally")     # GGally 패키지 설치(한번만 설치하면 됨)
#install.packages("gridExtra")  # gridExtra 패키지 설치(한번만 설치하면 됨)
library(ggplot2)
library(dplyr)
library(GGally)
library(gridExtra)
df = read.csv("data/train.csv", header = TRUE)    # csv file을 df라는 변수에 저장
head(df)
glimpse(df)    # 변수별로 대략적인 형태를 볼 수 있음
summary(df)    # 최대값, 최소값, 사분위수 등의 기본적인 통계량 확인 가능
unique(df$type)
colSums(is.na(df))
df_red <- df %>% filter(type=='red')
df_red
df_white <- df %>% filter(type=='white')
df_white
pairs(df_red[2:8] %>%  sample_n(1000))     # red wine 데이터의 변수별 산점도행렬 확인
pairs(df_white[2:8] %>% sample_n(1000))    # white wine 데이터의 변수별 산점도행렬 확인
pairs(df_red[c(2, 9:13)] %>% sample_n(1000))
pairs(df_white[c(2, 9:13)] %>% sample_n(1000))
pl1 = df %>% ggplot(aes(x=quality)) +
geom_histogram() +
facet_wrap(~ type)
pl2 = df %>% ggplot(aes(x=fixed.acidity)) +
geom_density() +
facet_wrap(~ type)
pl3 = df %>% ggplot(aes(x=volatile.acidity)) +
geom_density() +
facet_wrap(~ type)
pl4 = df %>% ggplot(aes(x=citric.acid)) +
geom_density() +
facet_wrap(~ type)
pl5 = df %>% ggplot(aes(x=residual.sugar)) +    # 그래프가 좀 이상함. outlier 값이 있을 것으로 예상됨.
geom_density() +
facet_wrap(~ type)
pl6 = df %>% ggplot(aes(x=chlorides)) +
geom_density() +
facet_wrap(~ type)
pl7 = df %>% ggplot(aes(x=free.sulfur.dioxide)) +
geom_density() +
facet_wrap(~ type)
pl8 = df %>% ggplot(aes(x=total.sulfur.dioxide)) +
geom_density() +
facet_wrap(~ type)
pl9 = df %>% ggplot(aes(x=density)) +
geom_density() +
facet_wrap(~ type)
pl10 = df %>% ggplot(aes(x=pH)) +
geom_density() +
facet_wrap(~ type)
pl11 = df %>% ggplot(aes(x=sulphates)) +
geom_density() +
facet_wrap(~ type)
pl12 = df %>% ggplot(aes(x=alcohol)) +
geom_density() +
facet_wrap(~ type)
grid.arrange(pl1, pl2, pl3, pl4, pl5, pl6, pl7, pl8, pl9, pl10, pl11, pl12, nrow=4, ncol=3)
box1 <-  df %>% ggplot(aes(quality, fixed.acidity, group=quality)) +
geom_jitter(col='gray') +
geom_boxplot(alpha = .5, outlier.color = 'red') +
facet_wrap(~ type)
box2 <-  df %>% ggplot(aes(quality, volatile.acidity, group=quality)) +    # red 와인의 경우 음의 상관관계
geom_jitter(col='gray') +
geom_boxplot(alpha = .5, outlier.color = 'red') +
facet_wrap(~ type)
box3 <- df %>% ggplot(aes(quality, citric.acid, group=quality)) +    # red 와인의 경우 양의 상관관계
geom_jitter(col='gray') +
geom_boxplot(alpha = .5, outlier.color = 'red') +
facet_wrap(~ type)
box4 <- df %>% ggplot(aes(quality, residual.sugar, group=quality)) +    # 이상치 때문에 제대로 관측 불가
geom_jitter(col='gray') +
geom_boxplot(alpha = .5, outlier.color = 'red') +
facet_wrap(~ type)
box5 <- df %>% ggplot(aes(quality, chlorides, group=quality)) +
geom_jitter(col='gray') +
geom_boxplot(alpha = .5, outlier.color = 'red') +
facet_wrap(~ type)
box6 <- df %>% ggplot(aes(quality, free.sulfur.dioxide, group=quality)) +
geom_jitter(col='gray') +
geom_boxplot(alpha = .5, outlier.color = 'red') +
facet_wrap(~ type)
box7 <- df %>% ggplot(aes(quality, total.sulfur.dioxide, group=quality)) +
geom_jitter(col='gray') +
geom_boxplot(alpha = .5, outlier.color = 'red') +
facet_wrap(~ type)
box8 <- df %>% ggplot(aes(quality, density, group=quality)) +
geom_jitter(col='gray') +
geom_boxplot(alpha = .5, outlier.color = 'red') +
facet_wrap(~ type)
box9 <- df %>% ggplot(aes(quality, pH, group=quality)) +
geom_jitter(col='gray') +
geom_boxplot(alpha = .5, outlier.color = 'red') +
facet_wrap(~ type)
box10 <- df %>% ggplot(aes(quality, sulphates, group=quality)) +    # red의 경우 양의 상관관계
geom_jitter(col='gray') +
geom_boxplot(alpha = .5, outlier.color = 'red') +
facet_wrap(~ type)
box11 <- df %>% ggplot(aes(quality, alcohol, group=quality)) +    # 둘 다 대체적으로 양의 상관관계
geom_jitter(col='gray') +
geom_boxplot(alpha = .5, outlier.color = 'red') +
facet_wrap(~ type)
grid.arrange(box1, box2, box3, box4, box5, box6, box7, box8, box9, box10, box11, nrow=6, ncol=2)
df_red %>% ggplot(aes(quality, residual.sugar, group=quality)) +
geom_jitter(col='gray') +
geom_boxplot(alpha = .5, outlier.color = 'red')
df_white %>% ggplot(aes(x = citric.acid, y = residual.sugar, color=as.factor(quality))) +
geom_point()
df_white %>% filter(quality <= 5) %>% ggplot(aes(x = citric.acid, y = residual.sugar, color=as.factor(quality))) +
geom_point()
df_white %>% filter(quality >= 7) %>% ggplot(aes(x = citric.acid, y = residual.sugar, color=as.factor(quality))) +
geom_point()
df_white %>%
filter(quality!=6) %>%
mutate(new_quality = ifelse(quality > 6, 'high', 'low')) %>%
ggplot(aes(x = citric.acid, y = residual.sugar, color=new_quality)) +
geom_point()
df_red %>%
filter(quality!=6) %>%
mutate(new_quality = ifelse(quality > 6, 'high', 'low')) %>%
ggplot(aes(x = citric.acid, y = sulphates, color=new_quality)) +
geom_point()
y = df_red['quality']
x = df_red['alcohol']
D = data.frame(y, x)
lm_alcohol = lm(quality~., data=D)
summary(lm_alcohol)
y = df_red['quality']
x = df_red['citric.acid']
D = data.frame(y, x)
lm_alcohol = lm(quality~., data=D)
summary(lm_alcohol)
y = df_white['quality']
x = df_white['citric.acid']
D = data.frame(y, x)
lm_alcohol = lm(quality~., data=D)
summary(lm_alcohol)
pairs(df_red %>%  sample_n(1000),
lower.panel = points(x, y),
upper.panel = panel.cor)     # red wine 데이터의 변수별 산점도행렬 확인
pairs(df_red %>%  sample_n(1000),
lower.panel = function(x,y){points(x,y)},
upper.panel = panel.cor)     # red wine 데이터의 변수별 산점도행렬 확인
pairs(df_red %>%  sample_n(1000),
lower.panel = function(x,y){points(x,y)},
upper.panel = panel.cor)
pairs(df_red %>%  sample_n(1000),
lower.panel = function(x,y){points(x,y); abline(0, 1, col='red')},
upper.panel = panel.cor)     # red wine 데이터의 변수별 산점도행렬 확인
pairs(df_red %>%  sample_n(1000))     # red wine 데이터의 변수별 산점도행렬 확인
pairs(df_red[c(2, 9:13)] %>% sample_n(1000))
pairs(df_red %>% sample_n(1000))
pairs(df_red[2:13] %>%  sample_n(1000))     # red wine 데이터의 변수별 산점도행렬 확인
pairs(df_red[2:13] %>%  sample_n(1000),
lower.panel = points(x, y),
upper.panel = panel.cor)     # red wine 데이터의 변수별 산점도행렬 확인
df1 = tbl_df(read.table("data/train.csv", strip.white = TRUE, sep= ";", header = TRUE))
df1
glimpse(data)
df1 = tbl_df(read.table("data/train.csv", strip.white = TRUE, sep= ";", header = TRUE))
glimpse(data)
glimpse(df)    # 변수별로 대략적인 형태를 볼 수 있음
df1 = tbl_df(read.table("data/train.csv", strip.white = TRUE, header = TRUE))
df1 = tbl_df(read.table("data/train.csv", strip.white = TRUE, sep=",", header = TRUE))
glimpse(data)
glimpse(df1)
df1
pairs(df1[2:13] %>%  sample_n(1000),
lower.panel = points(x, y),
upper.panel = panel.cor)
pairs(df1[2:13] %>%  sample_n(1000),
upper.panel = panel.cor)
pairs(df_red[2:13] %>%  sample_n(1000),
upper.panel = panel_cols())     # red wine 데이터의 변수별 산점도행렬 확인
pairs(df_red[2:13] %>%  sample_n(1000),
upper.panel = panel_cols(df_red))     # red wine 데이터의 변수별 산점도행렬 확인
+ }
panel.cor <- function(x, y){
+   r <- round(cor(x, y),3)
+   txt <- paste0("Corr. = ", r)
+   text(0.5, 0.5, txt, cex = 2)
+ }
panel.cor <- function(x, y){
+   r <- round(cor(x, y),3)
+   txt <- paste0("Corr. = ", r)
+   text(0.5, 0.5, txt, cex = 2)
+ }
panel.cor <- function(x, y){
+   r <- round(cor(x, y),3)
+   txt <- paste0("Corr. = ", r)
+   text(0.5, 0.5, txt, cex = 2)
}
pairs(df1[2:13] %>%  sample_n(1000),
upper.panel = panel.cor)
panel.cor <- function(x, y){
r <- round(cor(x, y),3)
txt <- paste0("Corr. = ", r)
text(0.5, 0.5, txt, cex = 2)
}
pairs(df1[2:13] %>%  sample_n(1000),
upper.panel = panel.cor)
df_white %>% head
df_red %>% head
df_red %>% head()
example(pairs)
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...){
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = cex.cor * r)
}
pairs(df1[2:13] %>%  sample_n(1000),
upper.panel = panel.cor)
txt <- paste0("Corr. = ", r)
panel.cor <- function(x, y){
r <- round(cor(x, y),3)
txt <- paste0("Corr. = ", r)
text(0.5, 0.5, txt, cex = 2)
}
pairs(df1[2:13] %>%  sample_n(1000),
upper.panel = panel.cor)# red wine 데이터의 변수별 산점도행렬 확인
r <- abs(cor(x, y))
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...){
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = cex.cor * r)
}
pairs(df1[2:13] %>%  sample_n(1000),
upper.panel = panel.cor)# red wine 데이터의 변수별 산점도행렬 확인
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...){
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = cex.cor * r)
}
pairs(df_red[2:13] %>%  sample_n(1000),
upper.panel = panel.cor)# red wine 데이터의 변수별 산점도행렬 확인
pairs(df_white[2:13] %>%  sample_n(1000),
upper.panel = panel.cor)# red wine 데이터의 변수별 산점도행렬 확인
ggpairs(df_red[2:13])
ggpairs(df_red[2:13] %>% sample_n(1000))
#You do not need to touch this chunk
#words after "#" sign are treated as comments
#It is strongly recommanded to use English in r markdown
knitr::opts_chunk$set(echo = TRUE)
#install.packages("ggplot2")    # ggplot2 패키지 설치(한번만 설치하면 됨)
#install.packages("dplyr")      # dplyr 패키지 설치(한번만 설치하면 됨)
#install.packages("GGally")     # GGally 패키지 설치(한번만 설치하면 됨)
#install.packages("gridExtra")  # gridExtra 패키지 설치(한번만 설치하면 됨)
library(ggplot2)
library(dplyr)
library(GGally)
library(gridExtra)
df = read.csv("data/train.csv", header = TRUE)    # csv file을 df라는 변수에 저장
head(df)
glimpse(df)    # 변수별로 대략적인 형태를 볼 수 있음
summary(df)    # 최대값, 최소값, 사분위수 등의 기본적인 통계량 확인 가능
unique(df$type)
colSums(is.na(df))
df_red <- df %>% filter(type=='red')
df_red %>% head
df_white <- df %>% filter(type=='white')
df_white %>% head
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...){
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = cex.cor * r)
}
pairs(df_red[2:13] %>%  sample_n(1000),
upper.panel = panel.cor)# red wine 데이터의 변수별 산점도행렬 확인
pairs(df_white[2:13] %>%  sample_n(1000),
upper.panel = panel.cor)# red wine 데이터의 변수별 산점도행렬 확인
pl1 = df %>% ggplot(aes(x=quality)) +
geom_histogram() +
facet_wrap(~ type)
pl2 = df %>% ggplot(aes(x=fixed.acidity)) +
geom_density() +
facet_wrap(~ type)
pl3 = df %>% ggplot(aes(x=volatile.acidity)) +
geom_density() +
facet_wrap(~ type)
pl4 = df %>% ggplot(aes(x=citric.acid)) +
geom_density() +
facet_wrap(~ type)
pl5 = df %>% ggplot(aes(x=residual.sugar)) +    # 그래프가 좀 이상함. outlier 값이 있을 것으로 예상됨.
geom_density() +
facet_wrap(~ type)
pl6 = df %>% ggplot(aes(x=chlorides)) +
geom_density() +
facet_wrap(~ type)
pl7 = df %>% ggplot(aes(x=free.sulfur.dioxide)) +
geom_density() +
facet_wrap(~ type)
pl8 = df %>% ggplot(aes(x=total.sulfur.dioxide)) +
geom_density() +
facet_wrap(~ type)
pl9 = df %>% ggplot(aes(x=density)) +
geom_density() +
facet_wrap(~ type)
pl10 = df %>% ggplot(aes(x=pH)) +
geom_density() +
facet_wrap(~ type)
pl11 = df %>% ggplot(aes(x=sulphates)) +
geom_density() +
facet_wrap(~ type)
pl12 = df %>% ggplot(aes(x=alcohol)) +
geom_density() +
facet_wrap(~ type)
grid.arrange(pl1, pl2, pl3, pl4, pl5, pl6, pl7, pl8, pl9, pl10, pl11, pl12, nrow=4, ncol=3)
box1 <-  df %>% ggplot(aes(quality, fixed.acidity, group=quality)) +
geom_jitter(col='gray') +
geom_boxplot(alpha = .5, outlier.color = 'red') +
facet_wrap(~ type)
box2 <-  df %>% ggplot(aes(quality, volatile.acidity, group=quality)) +    # red 와인의 경우 음의 상관관계
geom_jitter(col='gray') +
geom_boxplot(alpha = .5, outlier.color = 'red') +
facet_wrap(~ type)
box3 <- df %>% ggplot(aes(quality, citric.acid, group=quality)) +    # red 와인의 경우 양의 상관관계
geom_jitter(col='gray') +
geom_boxplot(alpha = .5, outlier.color = 'red') +
facet_wrap(~ type)
box4 <- df %>% ggplot(aes(quality, residual.sugar, group=quality)) +    # 이상치 때문에 제대로 관측 불가
geom_jitter(col='gray') +
geom_boxplot(alpha = .5, outlier.color = 'red') +
facet_wrap(~ type)
box5 <- df %>% ggplot(aes(quality, chlorides, group=quality)) +
geom_jitter(col='gray') +
geom_boxplot(alpha = .5, outlier.color = 'red') +
facet_wrap(~ type)
box6 <- df %>% ggplot(aes(quality, free.sulfur.dioxide, group=quality)) +
geom_jitter(col='gray') +
geom_boxplot(alpha = .5, outlier.color = 'red') +
facet_wrap(~ type)
box7 <- df %>% ggplot(aes(quality, total.sulfur.dioxide, group=quality)) +
geom_jitter(col='gray') +
geom_boxplot(alpha = .5, outlier.color = 'red') +
facet_wrap(~ type)
box8 <- df %>% ggplot(aes(quality, density, group=quality)) +
geom_jitter(col='gray') +
geom_boxplot(alpha = .5, outlier.color = 'red') +
facet_wrap(~ type)
box9 <- df %>% ggplot(aes(quality, pH, group=quality)) +
geom_jitter(col='gray') +
geom_boxplot(alpha = .5, outlier.color = 'red') +
facet_wrap(~ type)
box10 <- df %>% ggplot(aes(quality, sulphates, group=quality)) +    # red의 경우 양의 상관관계
geom_jitter(col='gray') +
geom_boxplot(alpha = .5, outlier.color = 'red') +
facet_wrap(~ type)
box11 <- df %>% ggplot(aes(quality, alcohol, group=quality)) +    # 둘 다 대체적으로 양의 상관관계
geom_jitter(col='gray') +
geom_boxplot(alpha = .5, outlier.color = 'red') +
facet_wrap(~ type)
grid.arrange(box1, box2, box3, box4, box5, box6, box7, box8, box9, box10, box11, nrow=6, ncol=2)
df_red %>% ggplot(aes(quality, residual.sugar, group=quality)) +
geom_jitter(col='gray') +
geom_boxplot(alpha = .5, outlier.color = 'red')
df_white %>% ggplot(aes(x = citric.acid, y = residual.sugar, color=as.factor(quality))) +
geom_point()
df_white %>% filter(quality <= 5) %>% ggplot(aes(x = citric.acid, y = residual.sugar, color=as.factor(quality))) +
geom_point()
df_white %>% filter(quality >= 7) %>% ggplot(aes(x = citric.acid, y = residual.sugar, color=as.factor(quality))) +
geom_point()
df_white %>%
filter(quality!=6) %>%
mutate(new_quality = ifelse(quality > 6, 'high', 'low')) %>%
ggplot(aes(x = citric.acid, y = residual.sugar, color=new_quality)) +
geom_point()
df_red %>%
filter(quality!=6) %>%
mutate(new_quality = ifelse(quality > 6, 'high', 'low')) %>%
ggplot(aes(x = citric.acid, y = sulphates, color=new_quality)) +
geom_point()
y = df_red['quality']
x = df_red['alcohol']
D = data.frame(y, x)
lm_alcohol = lm(quality~., data=D)
summary(lm_alcohol)
y = df_red['quality']
x = df_red['citric.acid']
D = data.frame(y, x)
lm_alcohol = lm(quality~., data=D)
summary(lm_alcohol)
y = df_white['quality']
x = df_white['citric.acid']
D = data.frame(y, x)
lm_alcohol = lm(quality~., data=D)
summary(lm_alcohol)
df_white %>% ggplot(aes(x = citric.acid, y = residual.sugar, color=as.factor(quality))) +
geom_point()
df_white %>% ggplot(aes(x = citric.acid, y = residual.sugar, color=as.factor(quality))) +
geom_point()
df_white %>%
filter(quality!=6) %>%
mutate(new_quality = ifelse(quality > 6, 'high', 'low')) %>%
ggplot(aes(x = citric.acid, y = residual.sugar, color=new_quality)) +
geom_point()
table(df$type)
table(df$type)
